package kr.or.ddit.management.partner.popup.web;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.management.partner.popup.service.IPopupService;
import kr.or.ddit.management.partner.popup.vo.PopupVO;
import kr.or.ddit.util.vo.PaginationVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/mangement/popup")
public class PopupController {
	
	@Inject
	private IPopupService popupService;
	
	@RequestMapping("/up")
	public String popUp(HttpServletRequest request , HttpServletResponse response, Model model ) throws Exception {	
		/// 팝업창에서 이미지 경로 가져오기 ->  vo.getter이미지경로
		/// model.addAttribute("이미지 경로vo", "이미지 경로");
		return "popup/popup";
	}
	


	// crud 시작
	@GetMapping("/list")
	public String popupList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "title") String searchType,
			@RequestParam(required = false) String searchWord, Model model
			) {
		
		log.info("popupList() 실행...!");
		
		PaginationVO<PopupVO> pagingVO = new PaginationVO<PopupVO>(10,5);
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchWord(searchWord);
			pagingVO.setSearchType(searchType);
			model.addAttribute("searchWord", searchWord);
			model.addAttribute("searchType", searchType);
		}
		
		pagingVO.setCurrentPage(currentPage);
		
		int totalRecord = popupService.selectPopupCount(pagingVO);
		
		pagingVO.setTotalRecord(totalRecord);
		
		List<PopupVO> dataList = popupService.selectPopupList(pagingVO);
		pagingVO.setDataList(dataList);
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "management/popup/popList";
	}
	
	@GetMapping("/register")
	public String popupRegisterForm() {
		log.info("popupRegisterForm() 실행...!");
		return "management/popup/popupForm";
	}
	
	@PostMapping("/register")
	public String popupRegister(
			RedirectAttributes ra,
			PopupVO eventVO, Model model
			) {
		log.info("popupRegister() 실행...!");
		String goPage="";
		int result = popupService.insert(eventVO);
		if(result >0) {
			ra.addFlashAttribute("message", "등록을 완료하였습니다");
			goPage = "redirect:/mangement/popup/list";
		}else {
			goPage = "management/popup/popupForm";
		}
		
		return goPage;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	

}





