package kr.or.ddit.management.partner.popup.service.impl;

import java.io.File;
import java.util.List;
import java.util.UUID;

import javax.annotation.Resource;
import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.management.partner.popup.mapper.IPopupMapper;
import kr.or.ddit.management.partner.popup.service.IPopupService;
import kr.or.ddit.management.partner.popup.vo.PopupVO;
import kr.or.ddit.util.vo.PaginationVO;

@Service
public class PopupServiceImpl implements IPopupService {
	
	@Inject
	private IPopupMapper popupMapper;
	
	
	@Resource(name="winUploadPath")
	private String winResourcePath;
	
	@Resource(name = "macUploadPath")
	private String macResourcePath;
	
	private static String resourcePath;
	

	@Override
	public int selectPopupCount(PaginationVO<PopupVO> pagingVO) {
		return popupMapper.selectPopupCount(pagingVO);
	}

	@Override
	public List<PopupVO> selectPopupList(PaginationVO<PopupVO> pagingVO) {
		return popupMapper.selectPopupList(pagingVO);
	}

	@Override
	public int insert(PopupVO popupVO) {
		String os = System.getProperty("os.name").toLowerCase();
		if(os.contains("win")) {
			resourcePath = winResourcePath;
		}
		if(os.contains("mac")) {
			resourcePath = macResourcePath;
		}
		
		resourcePath+="/popup/";
		
		File file = new File(resourcePath);
		if(!file.exists()) {
			file.mkdirs();
		}
		
		String popImg = "";
		
		try {
			MultipartFile eventImgFile = popupVO.getPopupImgFile();
			
			if(eventImgFile !=null && eventImgFile.getOriginalFilename()!=null && !eventImgFile.getOriginalFilename().equals("")) {
			String fileName = UUID.randomUUID().toString();
			fileName+="_"+eventImgFile.getOriginalFilename();
			resourcePath +=fileName;
			eventImgFile.transferTo(new File(resourcePath));
			popImg = "/upload/popup/"+fileName;
			}
			popupVO.setPopImg(popImg);
			
		} catch (Exception e) {
				e.printStackTrace();
		}
		
		int result = popupMapper.insert(popupVO);
		
		return result;
		
	}

}
