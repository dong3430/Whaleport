package kr.or.ddit.management.airService.customerManagement.web;


import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.customer.login.login.vo.LoginCustomerVO;
import kr.or.ddit.management.airService.customerManagement.service.ICustomerService;
import kr.or.ddit.util.vo.PaginationVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/management/customer")
public class CustomerManagementController {
	
	@Inject
	private ICustomerService cusService;
	
	
	
	//회원
	
	// 공항서빗관리 > 회원관리(회원 목록)
	@GetMapping("/list")
	public String cusList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "id") String searchType,
			@RequestParam(required = false) String searchWord, Model model			
			) {
		log.info("cusList()실행...!");
		
		PaginationVO<LoginCustomerVO> pagingVO = new PaginationVO<LoginCustomerVO>(10,5);
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchWord(searchWord);
			pagingVO.setSearchType(searchType);
			model.addAttribute("searchWord", searchWord);
			model.addAttribute("searchType", searchType);
		}
		
		pagingVO.setCurrentPage(currentPage);
		
		int totalRecord = cusService.selectCusCount(pagingVO);
		
		pagingVO.setTotalRecord(totalRecord);
		
		List<LoginCustomerVO> dataList = cusService.selectCusList(pagingVO);
		pagingVO.setDataList(dataList);
		
		model.addAttribute("pagingVO", pagingVO);
		
		
		return "management/customerManagement/customerList";
	}
	
	@GetMapping("/detail")
	public String cusDetail(int cusNo, Model model  ) {
		log.info("cusDetail()실행...!");
		LoginCustomerVO cusVO = cusService.selectCustomer(cusNo);
		model.addAttribute("cusVO", cusVO);
		return "management/customerManagement/customerDetail";
		
		
	}
	
	@PostMapping("/upate")
	public String cusUpdate(LoginCustomerVO cusVO, RedirectAttributes ra, Model model) {
		log.info("cusUpdate()실행...!");
		String goPage = "";
		int result = cusService.cusUpdate(cusVO);
		if(result > 0) {
			ra.addFlashAttribute("msg", "수정완료");
			ra.addFlashAttribute("message", "수정을 완료하였습니다.");
			goPage = "redirect:/management/customer/list";
		}else {
			ra.addFlashAttribute("msg", "오류");
			ra.addFlashAttribute("message", "서버에러, 다시 시도해주세요.");
			model.addAttribute("cusVO", cusVO);
			goPage = "management/customerManagement/customerDetail";
		}
		
		return goPage;
	}
	
	@PostMapping("/delete")
	public String cusDelete(LoginCustomerVO cusVO, RedirectAttributes ra, Model model) {
		log.info("cusDelete()실행...!");
		String goPage = "";
		int result = cusService.cusDelete(cusVO.getCusNo());
		if(result > 0) {
			ra.addFlashAttribute("msg", "삭제완료");
			ra.addFlashAttribute("message", "삭제 완료하였습니다.");
			goPage = "redirect:/management/customer/list";
		}else {
			ra.addFlashAttribute("msg", "오류");
			ra.addFlashAttribute("message", "서버에러, 다시 시도해주세요.");
			goPage = "redirect:/management/customer/detail?cusNo="+cusVO.getCusNo();
			
		}
		return goPage;
				
		
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	// 공항서비스 관리 > 시설 예약관리
	@GetMapping("/reservation")
	public String cusReservation() {
		log.info("cusReservation()실행...!");
		
		
		return "management/customerManagement/customerReservationList";
	}

	// 공항서비스 관리 > 항공편 스케줄 안내
	@GetMapping("/airlineSchedule")
	public String airlineSchedule() {
		log.info("airlineSchedule()실행...!");
		
		
		return "management/cusManagement/airlineSchedule";
	}
	
	
	
	

}
